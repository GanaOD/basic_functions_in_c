Fixed Stride Pattern:

hiddenp:    Flexible gaps      a---b----c   (any gaps OK)
jumpseek:   Fixed gaps         a_b_c       (exactly one char gap)



Matching Constraints:

hiddenp: Just needs characters in order
jumpseek: Needs characters in order WITH fixed spacing


traversal logic needs to change. Instead of:
// hiddenp style: flexible advancement
while (*s2 && *s2 != *s1)
    s2++;

Will need something that enforces the stride pattern:
// jumpseek style: fixed stride
if (*s2 == *s1)
{
    s2 += 2;  // Jump over the required gap
    s1++;
}



What happens if we have less than 2 characters left in s2?
How do we handle the case of single-character s1?
Edge case of empty s1 (should return 1)